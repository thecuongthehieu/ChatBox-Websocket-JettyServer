plugins {
    id 'java'
}

group 'org.example'
version '1.0'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

dependencies {
    // https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-server
    implementation 'org.eclipse.jetty:jetty-server:9.3.9.M0'

    // https://mvnrepository.com/artifact/org.eclipse.jetty.websocket/websocket-servlet
    implementation 'org.eclipse.jetty.websocket:websocket-servlet:9.3.9.M0'

    // https://mvnrepository.com/artifact/org.eclipse.jetty.websocket/websocket-server
    implementation 'org.eclipse.jetty.websocket:websocket-server:9.3.9.M0'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation 'com.google.code.gson:gson:2.9.0'

    // https://mvnrepository.com/artifact/log4j/log4j
    implementation 'log4j:log4j:1.2.17'
}

def CLASS_PATH = sourceSets.main.runtimeClasspath.getAsPath()
task runWithExec(type: Exec) {
    dependsOn build
    group = "Execution"
    description = "Run the main class with Exec Task"
    commandLine "java", "-classpath", CLASS_PATH, "-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=*:5005", "com.dev.Daemon"
}

task printSourceSetInformation() {
    doLast {
        sourceSets.each { srcSet ->
            println "[" + srcSet.name + "]"
            print "-->Source directories: " + srcSet.allJava.srcDirs + "\n"
            print "-->Output directories: " + srcSet.output.classesDirs.files + "\n"
            print "-->Compile classpath:\n"
            srcSet.compileClasspath.files.each {
                print "  " + it.path + "\n"
            }
            print "-->Runtime classpath:\n"
            srcSet.runtimeClasspath.files.each {
                print "  " + it.path + "\n"
            }
            println ""
        }
    }
}

test {
    useJUnitPlatform()
}

jar {
    archiveBaseName = 'webchat'
    archiveVersion =  "$version"
    manifest {
        attributes 'Main-Class' : 'com.dev.Daemon'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy "exclude"
}
